#!/usr/bin/env sh

# Copyright (c) 2012-2018. The SimGrid Team. All rights reserved.

# This program is free software; you can redistribute it and/or modify it
# under the terms of the license (GNU LGPL) which comes with this package.

SIMGRID_VERSION="@SIMGRID_VERSION_STRING@"
SIMGRID_GITHASH="@SIMGRID_GITHASH@"

F90=@SMPI_Fortran_COMPILER@

INCLUDEARGS="@includeflag@"
CMAKE_LINKARGS="-L@libdir@"

@SMPITOOLS_SH@

list_set FFLAGS @SMPI_Fortran_FLAGS@
list_set LINKARGS "-shared" "-lsimgrid" @SMPI_Fortran_LIBS@ "-lm"
list_set TMPFILES
main_name=main

cleanup () {
    eval $(list_get TMPFILES)
    rm -f "$@"
}
trap 'cleanup' EXIT

filter_and_compile() {
    list_add TMPFILES "${TMPFILE}"
#replace "program main_name by subroutine user\_main (and the end clause as well)"
    sed 's/[[:space:]]*[pP][rR][oO][gG][rR][aA][mM][[:space:]]*\([a-zA-Z0-9\-\_]*\)/ subroutine user\_main /g;s/[[:space:]]*[uU][sS][eE][[:space:]]*[mM][pP][iI]/\include \"mpif\.h\" /g' "${ARG}" > "${TMPFILE}"
    SRCFILE="${TMPFILE}"
    list_add CMDLINE "${SRCFILE}"
}

NEEDS_OUTPUT=1

list_set CMDLINE "${F90}"
list_add_not_empty CMDLINE "${FFLAGS}"
while [ $# -gt 0 ]; do
    ARG="$1"
    shift
    case "${ARG}" in
        -c)
            CMAKE_LINKARGS=""
            LINKARGS=""
            list_add CMDLINE "-c"
            ;;
        *.f90)
            ORIGFILE="${ARG%.f90}"
            TMPFILE=$(mymktemp "${ARG}" ".f90")
            filter_and_compile
            ;;
        *.F90)
            ORIGFILE="${ARG%.F90}"
            TMPFILE=$(mymktemp "${ARG}" ".F90")
            filter_and_compile
            ;;
        '-version' | '--version')
            printf '%b\n' "$SIMGRID_VERSION"
            exit 0
            ;;
        "-git-version" | "--git-version")
            printf '%b\n' "$SIMGRID_GITHASH"
            exit 0
            ;;
        '-compiler-version' | '--compiler-version')
            ${F90} --version
            ;;
        -o)
            list_add CMDLINE "-o$1"
            NEEDS_OUTPUT=0
            shift
            ;;
        *)
            list_add CMDLINE "${ARG}"
            ;;
    esac
done


if [ $NEEDS_OUTPUT -ne 0 ]; then
   list_add CMDLINE "-o${ORIGFILE}.o"
fi

list_add_not_empty CMDLINE ${INCLUDEARGS}
list_add_not_empty CMDLINE ${CMAKE_LINKARGS}
list_add_not_empty CMDLINE "${LINKARGS}"

eval $(list_get CMDLINE)
"$@"
