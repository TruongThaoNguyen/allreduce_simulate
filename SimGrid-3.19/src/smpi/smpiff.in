#!/usr/bin/env sh

# Copyright (c) 2012-2017. The SimGrid Team.
# All rights reserved.

# This program is free software; you can redistribute it and/or modify it
# under the terms of the license (GNU LGPL) which comes with this package.

SIMGRID_VERSION="@SIMGRID_VERSION_STRING@"
SIMGRID_GITHASH="@SIMGRID_GITHASH@"

F77=@SMPI_Fortran_COMPILER@

INCLUDEARGS="@includeflag@"
CMAKE_LINKARGS="-L@libdir@"

@SMPITOOLS_SH@

list_set FFLAGS @SMPI_Fortran_FLAGS@
list_set LINKARGS "-shared" "-lsimgrid" @SMPI_Fortran_LIBS@ "-lm"
list_set TMPFILES
main_name=main

cleanup () {
    eval $(list_get TMPFILES)
    rm -f "$@"
}
trap 'cleanup' EXIT

filter_and_compile() {
    list_add TMPFILES "${TMPFILE}"
    #replace "program main_name by subroutine user\_main (and the end clause as well)"
    if [ $TRACE_CALL_LOCATION -gt 0 ]; then
      echo "#include \"@includedir@/smpi/smpi_extended_traces_fortran.h\"" > ${TMPFILE}
    echo "#line 1 \"${ARG}\"" >> ${TMPFILE}
    fi
    sed 's/[[:space:]]\{6\}[[:space:]]*\([eE][nN][dD] \)\{0,1\}[pP][rR][oO][gG][rR][aA][mM][[:space:]]*\([a-zA-Z0-9\-\_]*\)/      \1subroutine user_main /g;s/[[:space:]]*[uU][sS][eE][[:space:]]*[mM][pP][iI]/\include \"mpif\.h\" /g' "${ARG}" >> "${TMPFILE}"
    SRCFILE="${TMPFILE}"
    list_add CMDLINE "${SRCFILE}"
}
TRACE_CALL_LOCATION=0
NEEDS_OUTPUT=1

list_set CMDLINE "${F77}"
list_add_not_empty CMDLINE "${FFLAGS}"
while [ $# -gt 0 ]; do
    ARG="$1"
    shift
    case "${ARG}" in
        -c)
            CMAKE_LINKARGS=""
            LINKARGS=""
            list_add CMDLINE "-c"
            ;;
        *.f)
            TMPFILE=$(mymktemp "${ARG}" ".f")
            ORIGFILE="${ARG%.f}"
            filter_and_compile
            ;;
        *.F)
            TMPFILE=$(mymktemp "${ARG}" ".F")
            ORIGFILE="${ARG%.F}"
            filter_and_compile
            ;;
        '-version' | '--version')
            printf '%b\n' "$SIMGRID_VERSION"
            exit 0
            ;;
        "-git-version" | "--git-version")
            printf '%b\n' "$SIMGRID_GITHASH"
            exit 0
            ;;
        '-compiler-version' | '--compiler-version')
            ${F77} --version
            ;;
        '-trace-call-location')
            TRACE_CALL_LOCATION=1
            # This should be list_add FFLAGS but it's not possible
            # anymore: FFLAGS was already moved into CMDLINE above.
            list_add_not_empty CMDLINE "-ffixed-line-length-none" "-cpp"
            ;;
        -o)
            NEEDS_OUTPUT=0
            list_add CMDLINE "-o$1"
            shift
            ;;        
        *)
            list_add CMDLINE "${ARG}"
            ;;
    esac
done

if [ $NEEDS_OUTPUT -ne 0 ]; then
   list_add CMDLINE "-o${ORIGFILE}.o"     
fi

list_add_not_empty CMDLINE ${INCLUDEARGS}
list_add_not_empty CMDLINE ${CMAKE_LINKARGS}
list_add_not_empty CMDLINE "${LINKARGS}"

eval $(list_get CMDLINE)
"$@"
